syntax = "proto3";

package server;

service Supply {
    // Ordering
    rpc CreateOrder (CreateOrderRequest) returns (CreateOrderResponse) {}
    rpc SendOrder (SendOrderRequest) returns (SendOrderResponse) {}
    rpc AddOrderItem (AddOrderItemRequest) returns (AddOrderItemResponse) {}
    rpc RemoveOrderItem (RemoveOrderItemRequest) returns (RemoveOrderItemResponse) {}
    rpc ReceiveOrderItem (ReceiveOrderItemRequest) returns (ReceiveOrderItemResponse) {}
    rpc ModifyRequestedQuantity (ModifyRequestedQuantityRequest) returns (ModifyRequestedQuantityResponse) {}
    rpc FindOrder  (FindOrderRequest) returns (FindOrderResponse);
    rpc FindProjectOrderDates (FindProjectOrderDatesRequest) returns (FindProjectOrderDatesResponse);
    rpc DeleteOrder (DeleteOrderRequest) returns (DeleteOrderResponse);
    // ProductSearch
    rpc ProductSearch (ProductSearchRequest) returns (ProductSearchResponse) {}
    // Projects
    rpc CreateProject (CreateProjectRequest) returns (CreateProjectResponse) {}
    rpc CloseProject (CloseProjectRequest) returns (CloseProjectResponse) {}
    rpc FindProjects (FindProjectsRequest) returns (FindProjectsResponse) {}
}

// CreateOrder
message CreateOrderRequest {
    string project_id = 2;
    string name = 3;
    string foreman = 4;
    string email = 5;
}
message CreateOrderResponse {
    OrderSummary order = 1;
}

// AddOrderItem
message AddOrderItemRequest {
    string id = 1;
    string product_id = 2;
    string name = 3;
    string uom = 4;
}
message AddOrderItemResponse {
    Order order = 1;
}

// RemoveOrderItem
message RemoveOrderItemRequest {
    string id = 1;
    string product_id = 2;
}
message RemoveOrderItemResponse {
    Order order = 1;
}

// ModifyRequestedQuantity
message ModifyRequestedQuantityRequest {
    string id = 1;
    string product_id = 2;
    uint32 quantity = 3;
}
message ModifyRequestedQuantityResponse {
    Order order = 1;
}

// SendOrder
message SendOrderRequest {
    string id = 1;
    string comments = 2;
}
message SendOrderResponse {
    Order order = 1;
}

// ReceiveOrderItem
message ReceiveOrderItemRequest {
    string id = 1;
    string product_id = 2;
    uint32 quantity = 3;
}
message ReceiveOrderItemResponse {
    Order order = 1;
}

// An Order
message Order {
    string id = 1;
    Project project = 2;
    repeated Item items = 3;
    int32 date = 4;
    string status = 5;
    string comments = 6;
}

message Project {
    string id = 1;
    string name = 2;
}

// An order item
message Item {
    Product product = 1;
    uint32 quantity_requested = 2;
    uint32 quantity_received = 3;
    uint32 quantity_remaining = 4;
    string item_status = 5;
    bool deleted = 6;
}

// A product
message Product {
    string id = 1;
    string name = 2;
    string uom = 3;
}

// FindOrder
message FindOrderRequest {
    string id = 1;
}
message FindOrderResponse {
    Order order = 1;
}

// Project order summary
message OrderSummary {
    string id = 1;
    int32 date = 2;
    string status = 3;
}

// FindProjectOrderDates
message FindProjectOrderDatesRequest {
    string project_id = 1;
}
message FindProjectOrderDatesResponse {
    repeated OrderSummary orders = 1;
}

// Delete an order
message DeleteOrderRequest {
    string order_id = 1;
}
message DeleteOrderResponse {}

// A result
message Result {
    Product product = 1;
    repeated int32 indexes = 2;
}

// ProductSearch
message ProductSearchRequest {
    string name = 1;
}
message ProductSearchResponse {
    repeated Result results = 5;
}

// Create a project
message CreateProjectRequest {
    string id = 1;
    string name = 2;
}
message CreateProjectResponse {}

// Close a project
message CloseProjectRequest {
    string id = 1;
}
message CloseProjectResponse {}

// Find all projects by foreman
message FindProjectsRequest {
    string foreman_id = 1;
}
message FindProjectsResponse {
    repeated Project projects = 1;
}

// Perchasing
//service Purchasing {
//    rpc ProcessOrder (ProcessOrderRequest) returns (ProcessOrderResponse) {}
//    rpc 000 (Request) returns (Response) {}
//}

/* eslint-disable */

/** Generate GO proto
protoc --go_out=plugins=grpc:. *.proto
 */

/** Generate JS proto
 protoc -I=. ./proto/supply.proto \
  --js_out=import_style=commonjs:./src/Order\
  --grpc-web_out=import_style=commonjs,mode=grpcwebtext:./src/Order
 */

//  import _"github.com/jnewmano/grpc-json-proxy/codec"
//  go run github.com/jnewmano/grpc-json-proxy grpc-json-proxy
//  http://www.objgen.com/json?demo=true