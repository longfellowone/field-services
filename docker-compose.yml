version: '3.7'

services:

  db:
    image: postgres
    restart: always
    env_file: .env
    volumes:
      - ./docker/postgres/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  envoy:
    build:
      context: .
      dockerfile: docker/envoy/Dockerfile
    restart: always
    env_file: .env
    ports:
      - '8080:8080'

  grpcsvc:
    build:
      context: .
      dockerfile: docker/grpcsvc/Dockerfile
    depends_on:
      - db
    restart: always
    env_file: .env
    ports:
      - "9090:9090"

#  graphqlsvc:
#    depends_on:
#      - db
#    build:
#      context: .
#      dockerfile: docker/graphqlsvc/Dockerfile
#    ports:
#      - "8080:8080"

#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: default
#      MONGO_INITDB_ROOT_PASSWORD: password
#    ports:
#      - 27017:27017

#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: default
#      ME_CONFIG_MONGODB_ADMINPASSWORD: password

# docker inspect CONTAINER_ID
# docker run --rm -it CONTAINER_ID sh
# docker exec -it CONTAINER_ID sh
# docker-compose logs -f -t